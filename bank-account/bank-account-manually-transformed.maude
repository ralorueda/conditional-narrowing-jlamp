fmod NATURAL-PRES-MONUS is 
    protecting TRUTH-VALUE .
    sort Natural .

    ops 0 1 : -> Natural [ctor] .
    op _+_ : Natural Natural -> Natural [ctor assoc comm id: 0] .
endfm

mod BANK-ACCOUNT is 
    protecting NATURAL-PRES-MONUS .

    sorts Account Msg MsgConf State StatePair .
    subsort Msg < MsgConf .

    op < bal:_pend:_overdraft:_> : Natural Natural Bool -> Account [ctor] .
    op mt : -> MsgConf [ctor] .
    op withdraw : Natural -> Msg [ctor] .
    op _,_ : MsgConf MsgConf -> MsgConf [ctor assoc comm id: mt] .
    op _#_ : Account MsgConf -> State [ctor] . *** state constructor

    vars n n' m x y x' y' : Natural .    vars b b' : Bool .
    vars msgs msgs' : MsgConf .

    rl [w-req] : < bal: n + m + x pend: x overdraft: false > # msgs 
                    => < bal: n + m + x pend: x + m overdraft: false > # withdraw(m),msgs [narrowing] .

    rl [w] : < bal: n + m + x pend: m overdraft: false > # msgs,withdraw(m + x)
                    => < bal: n pend: 0 overdraft: false > # msgs [narrowing] .

    rl [w] : < bal: n + m pend: m + x overdraft: false > # msgs,withdraw(m) 
                    => < bal: n pend: x overdraft: false > # msgs [narrowing] .

    rl [w] : < bal: n pend: y overdraft: false > # msgs',withdraw(1 + n + x)
                    => < bal: n pend: y overdraft: true > # msgs' [narrowing] .

    rl [dep] : < bal: n pend: x overdraft: false > # msgs 
                    => < bal: n + m pend: x overdraft: false > # msgs [narrowing nonexec] .
endm

--- Experiments commands
vu-narrow [,2] in BANK-ACCOUNT : < bal: 1 + 1 + 1 + 1 pend: P:Natural overdraft: O:Bool > # M:MsgConf =>* < bal: B':Natural pend: P':Natural overdraft: O':Bool > # M':MsgConf .
vu-narrow [,3] in BANK-ACCOUNT : < bal: 1 + 1 + 1 + 1 pend: P:Natural overdraft: O:Bool > # M:MsgConf =>* < bal: B':Natural pend: P':Natural overdraft: O':Bool > # M':MsgConf .